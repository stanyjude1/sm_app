package com.nrimarriagebureu.user.activity;

import android.content.Intent;
import android.net.Uri;
import android.os.Bundle;
import android.support.design.widget.TabLayout;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentStatePagerAdapter;
import android.support.v4.view.ViewPager;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.Toolbar;

import com.nrimarriagebureu.user.R;
import com.nrimarriagebureu.user.application.Application;
import com.nrimarriagebureu.user.fragment.MatchMakerFragment;
import com.nrimarriagebureu.user.utility.AppDebugLog;
import com.nrimarriagebureu.user.utility.ApplicationData;
import com.nrimarriagebureu.user.utility.SessionManager;
import com.nrimarriagebureu.user.utility.Utility;

import java.util.ArrayList;
import java.util.List;

public class MatchMakerActivity extends AppCompatActivity {
    private ViewPager mViewPager;
    private TabLayout tabLayout;

    public MatchMakerFragment acceptedMatchMakerFragment;
    public MatchMakerFragment rejectedMatchMakerFragment;
    public MatchMakerFragment pendingMatchMakerFragment;

    public boolean isFirstTimeApiCallFromInitialize = true;

    private boolean isFromAppLinking = false;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_match_maker);
        initialize();

        SessionManager session = new SessionManager(this);
        if (!session.isLoggedIn()) {
            Intent intent = new Intent(Application.getAppContext(), MainActivity.class);
            startActivity(intent);
            finish();
        } else {
            handleIntent(getIntent());
        }
    }

    protected void onNewIntent(Intent intent) {
        super.onNewIntent(intent);
        handleIntent(intent);
    }

    private void handleIntent(Intent intent) {
        AppDebugLog.print("in handleIntent :" + intent.getData());
        Uri appLinkData = intent.getData();
        if (appLinkData != null) {
            isFromAppLinking = true;
            AppDebugLog.print("appLinkData in handleIntent : " + appLinkData.getPath());
        }
    }

    @Override
    public void onBackPressed() {
        backPressed();
    }

    private void backPressed() {
        if (isFromAppLinking) {
            startActivity(new Intent(this, DashboardActivity.class));
            finish();
        }else{
            finish();
        }
    }


    private void setToolbar() {
        Toolbar toolbar = findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);

        getSupportActionBar().setTitle("Received Matches");
        getSupportActionBar().setDisplayHomeAsUpEnabled(true);
        getSupportActionBar().setDisplayShowHomeEnabled(true);

        toolbar.setNavigationOnClickListener(view -> {
            backPressed();
        });

    }

    private void initialize() {
        setToolbar();

        ApplicationData.displayWidth = Utility.getDisplayWidth(this);

        mViewPager = findViewById(R.id.container);
        setupViewPager(mViewPager);

        tabLayout = findViewById(R.id.tabs_photo);
        tabLayout.setupWithViewPager(mViewPager);
        tabLayout.addOnTabSelectedListener(onTabSelectedListener(mViewPager));
    }

    private void setupViewPager(ViewPager viewPager) {
        acceptedMatchMakerFragment = MatchMakerFragment.newInstance("Accepted");
        rejectedMatchMakerFragment = MatchMakerFragment.newInstance("Rejected");
        pendingMatchMakerFragment = MatchMakerFragment.newInstance("Pending");
        ViewPagerAdapter adapter = new ViewPagerAdapter(getSupportFragmentManager());
        adapter.addFragment(acceptedMatchMakerFragment, "Accepted");
        adapter.addFragment(rejectedMatchMakerFragment, "Rejected");
        adapter.addFragment(pendingMatchMakerFragment, "Pending");
        viewPager.setAdapter(adapter);

        mViewPager.setCurrentItem(2);
    }

    class ViewPagerAdapter extends FragmentStatePagerAdapter {
        private final List<Fragment> mFragmentList = new ArrayList<>();
        private final List<String> mFragmentTitleList = new ArrayList<>();

        public ViewPagerAdapter(FragmentManager manager) {
            super(manager);
        }

        @Override
        public Fragment getItem(int position) {
            return mFragmentList.get(position);
        }

        @Override
        public int getCount() {
            return mFragmentList.size();
        }

        public void addFragment(Fragment fragment, String title) {
            mFragmentList.add(fragment);
            mFragmentTitleList.add(title);
        }

        @Override
        public CharSequence getPageTitle(int position) {
            return mFragmentTitleList.get(position);
        }
    }

    private TabLayout.OnTabSelectedListener onTabSelectedListener(final ViewPager viewPager) {

        return new TabLayout.OnTabSelectedListener() {
            @Override
            public void onTabSelected(TabLayout.Tab tab) {
                viewPager.setCurrentItem(tab.getPosition());

                switch (tab.getPosition()) {
                    case 0:
                        acceptedMatchMakerFragment.tabChanged();
                        break;
                    case 1:
                        rejectedMatchMakerFragment.tabChanged();
                        break;
                    case 2:
                        pendingMatchMakerFragment.tabChanged();
                        break;
                }
            }

            @Override
            public void onTabUnselected(TabLayout.Tab tab) {

            }

            @Override
            public void onTabReselected(TabLayout.Tab tab) {

            }
        };
    }

}
